{"version":3,"sources":["components/CurrencyInput.tsx","components/CurrencySelect.tsx","components/Block.tsx","components/ArrowIcon.tsx","components/ErrorPlaceholder.tsx","constants.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["format","type","value","isReversed","startsWith","getColor","CurrencyInput","isInvalid","onChange","aria-label","precision","clampValueOnBlur","variant","size","focusBorderColor","errorBorderColor","color","border","CurrencySelect","currencies","name","width","_hover","cursor","map","item","Block","account","symbol","handleChange","handleSelect","accountsKeys","currency","inputVal","exceeds","data-testid","alignSelf","ArrowIcon","props","viewBox","d","fill","ErrorPlaceholder","align","padding","as","marginBottom","SYMBOLS","USD","EUR","GBP","App","useState","rates","setRates","accounts","setAccounts","from","setFrom","to","setTo","fromVal","setFromVal","toVal","setToVal","setReversed","hasError","setError","getTypedKeys","Object","keys","fromExceedsBalance","toExceedsBalance","fetchRates","fetch","toLowerCase","then","raw","json","data","newRates","base","catch","useEffect","interval","setInterval","clearInterval","String","toFixed","e","target","strValue","replace","parse","split","decimals","multiple","length","endsWith","spacing","position","icon","onClick","transform","isRound","bg","_active","_focus","top","right","fromValNum","Number","toValNum","disabled","colorScheme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d28ae9d1.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tNumberInput,\n\tNumberInputField,\n\tNumberInputStepper,\n\tNumberIncrementStepper,\n\tNumberDecrementStepper\n} from '@chakra-ui/react';\nimport { TCurrencyInput, TType } from '../types';\n\nconst format = (type: TType, value: string, isReversed: boolean) => {\n\tif (+value === 0 || value.startsWith('+') || value.startsWith('-')) {\n\t\treturn value;\n\t}\n\n\tif (!isReversed) {\n\t\treturn (type === 'from' ? `-${value}` : `+${value}`);\n\t}\n\n\treturn (type === 'from' ? `+${value}` : `-${value}`);\n};\n\nconst getColor = (type: TType, isReversed: boolean) => {\n\tif (!isReversed) {\n\t\treturn (type === 'from' ? 'red.500' : 'green.500');\n\t}\n\n\treturn (type === 'from' ? 'green.500' : 'red.500');\n\t\n};\n\nconst CurrencyInput = ({ type, value, isInvalid, isReversed, onChange }: TCurrencyInput): JSX.Element => (\n\t<NumberInput\n\t\taria-label={type}\n\t\tvalue={format(type, value, isReversed)}\n\t\tprecision={2}\n\t\tclampValueOnBlur={false}\n\t\tvariant='flushed'\n\t\tsize='lg'\n\t\tfocusBorderColor='cyan.400'\n\t\terrorBorderColor='red.500'\n\t\tisInvalid={isInvalid}\n\t\tonChange={onChange}\n\t>\n\t\t<NumberInputField color={getColor(type, isReversed)} />\n\t\t<NumberInputStepper >\n\t\t\t<NumberIncrementStepper border='none'/>\n\t\t\t<NumberDecrementStepper border='none'/>\n\t\t</NumberInputStepper>\n\t</NumberInput>\n);\n\nexport default CurrencyInput;\n","import React from 'react';\nimport { Select } from '@chakra-ui/react';\nimport { TCurrencySelect } from '../types';\n\nconst CurrencySelect = ({ type, value, currencies, onChange }: TCurrencySelect): JSX.Element => (\n\t<Select\n\t\tname={`select-${type}`}\n\t\taria-label={`select-${type}`}\n\t\tvalue={value}\n\t\tonChange={onChange}\n\t\twidth='auto'\n\t\tvariant='flushed'\n\t\tsize='lg'\n\t\tfocusBorderColor='cyan.400'\n\t\t_hover={{ cursor: 'pointer' }}\n\t>\n\t\t{currencies.map(item => <option key={item} value={item}>{item}</option>)}\n\t</Select>\n);\n\nexport default CurrencySelect;\n","import React from 'react';\nimport {\n\tBox,\n\tFlex\n} from '@chakra-ui/react';\nimport CurrencyInput from './CurrencyInput';\nimport CurrencySelect from './CurrencySelect';\nimport { TBlock } from '../types';\n\nconst Block = ({\n\ttype, \n\taccount, \n\tsymbol, \n\thandleChange, \n\thandleSelect, \n\tisReversed, \n\taccountsKeys,\n\tcurrency,\n\tinputVal,\n\texceeds\n}: TBlock): JSX.Element => (\n\t<Box>\n\t\t{type === 'from' && <Box\n\t\t\tdata-testid={`account-${type}`}\n\t\t\tcolor={exceeds ? 'red.500' : 'gray.500'}\n\t\t\talignSelf='center'\n\t\t>\n\t\t\tBalance: {symbol}{account}\n\t\t</Box>}\n\t\t<Flex>\n\t\t\t<CurrencySelect\n\t\t\t\ttype={type}\n\t\t\t\tvalue={currency}\n\t\t\t\tcurrencies={accountsKeys}\n\t\t\t\tonChange={handleSelect(type)}\n\t\t\t/>\n\t\t\t<CurrencyInput\n\t\t\t\ttype={type}\n\t\t\t\tvalue={inputVal}\n\t\t\t\tisInvalid={exceeds}\n\t\t\t\tisReversed={isReversed}\n\t\t\t\tonChange={handleChange(type)}\n\t\t\t/>\n\t\t</Flex>\n\t\t{type === 'to' && <Box\n\t\t\tdata-testid={`account-${type}`}\n\t\t\tcolor={exceeds ? 'red.500' : 'gray.500'}\n\t\t\talignSelf='center'\n\t\t>\n\t\t\tBalance: {symbol}{account}\n\t\t</Box>}\n\t</Box>\n);\n\nexport default Block;\n","import React from 'react';\nimport { Icon, IconProps } from '@chakra-ui/react';\n\nconst ArrowIcon = (props: IconProps): JSX.Element => (\n\t<Icon viewBox=\"0 0 512 512\" {...props}>\n\t\t<path d=\"m365.291 168.033a295.963 295.963 0 0 0 -293.291 295.967 24 24 0 0 1 -48 0 343.66 343.66 0 0 1 341.376-343.968l31.958 23.968zm-14.891 91.167 128-96a24 24 0 0 0 0-38.4l-128-96a24 24 0 1 0 -28.8 38.4l102.4 76.8-102.4 76.8a24 24 0 1 0 28.8 38.4z\" fill='currentColor' />\n\t</Icon>\n);\n\nexport default ArrowIcon;\n","import React from 'react';\nimport {\n\tBox,\n\tHeading,\n\tText\n} from '@chakra-ui/react';\n\nconst ErrorPlaceholder = (): JSX.Element => (\n\t<Box align='center' padding={8} data-testid='error-placeholder'>\n\t\t<Heading as='h1' size='lg' marginBottom={1} color='red.500'>:(</Heading>\n\t\t<Text>An error occured while loading currency rates.</Text>\n\t\t<Text>Trying one more time in several seconds...</Text>\n\t</Box>\n);\n\nexport default ErrorPlaceholder;\n","import { TCurrency, TSymbol } from './types';\n\nexport const API_KEY = 'df6831b373d143a6ba70c3b88c270bad';\nexport const BASE = 'USD'; // USD only in free plan\nexport const SYMBOLS = {\n\tUSD: '$',\n\tEUR: '€',\n\tGBP: '£'\n} as Record<TCurrency, TSymbol>;\n","import React, { useState, useEffect } from 'react';\nimport { \n\tBox,\n\tButton, \n\tHeading, \n\tIconButton,\n\tVStack \n} from '@chakra-ui/react';\n\nimport Block from './components/Block';\nimport ArrowIcon from './components/ArrowIcon';\nimport ErrorPlaceholder from './components/ErrorPlaceholder';\n\nimport { TResponse, TRates, TAccounts, TCurrency, TType } from './types';\nimport { API_KEY, BASE, SYMBOLS } from './constants';\n\nconst parse = (value: string) => value.replace(/^-+/u, '');\n\nconst App = (): JSX.Element => {\n\tconst [rates, setRates] = useState<TRates>({ USD: 1, EUR: 0, GBP: 0 });\n\tconst [accounts, setAccounts] = useState<TAccounts>({ USD: '100', EUR: '200', GBP: '0' });\n\tconst [from, setFrom] = useState<TCurrency>(BASE);\n\tconst [to, setTo] = useState<TCurrency>('EUR');\n\tconst [fromVal, setFromVal] = useState<string>('1');\n\tconst [toVal, setToVal] = useState<string>('0');\n\tconst [isReversed, setReversed] = useState<boolean>(false);\n\tconst [hasError, setError] = useState<boolean>(false);\n\n\tconst getTypedKeys = Object.keys as <T extends Record<string, unknown>>(obj: T) => Array<keyof T>;\n\tconst accountsKeys = getTypedKeys(accounts);\n\tconst fromExceedsBalance = !isReversed && +fromVal > +accounts[from];\n\tconst toExceedsBalance = isReversed && +toVal > +accounts[to];\n\n\tconst fetchRates = () => {\n\t\tfetch(`https://openexchangerates.org/api/latest.json?app_id=${API_KEY}&base=${BASE.toLowerCase()}`)\n\t\t\t.then(raw => raw.json())\n\t\t\t.then((data: TResponse) => {\n\t\t\t\tconst newRates = {\n\t\t\t\t\t[data.base]: 1,\n\t\t\t\t\tEUR: data.rates.EUR,\n\t\t\t\t\tGBP: data.rates.GBP\n\t\t\t\t} as TRates;\n\n\t\t\t\tsetRates(newRates);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetError(true);\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(fetchRates, 10000);\n\t\tfetchRates();\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsetToVal(String((+fromVal * (rates[to] / rates[from])).toFixed(2)));\n\t\tsetError(false);\n\t}, [rates]);\n\n\tconst handleSelect = (type: TType) => (e: React.SyntheticEvent) => {\n\t\tconst target = e.target as HTMLSelectElement;\n\t\tconst value = target.value as TCurrency;\n\n\t\tif (type === 'from') {\n\t\t\tif (value === to) {\n\t\t\t\tsetTo(from);\n\t\t\t}\n\t\t\tsetFrom(value);\n\t\t\tsetToVal(String((+fromVal * (rates[to] / rates[value])).toFixed(2)));\n\n\t\t} else {\n\t\t\tif (value === from) {\n\t\t\t\tsetFrom(to);\n\t\t\t}\n\t\t\tsetTo(value);\n\t\t\tsetToVal(String((+fromVal * (rates[value] / rates[from])).toFixed(2)));\n\t\t}\n\t};\n\n\tconst handleChange = (type: TType) => (strValue: string) => {\n\t\tconst value = parse(strValue);\n\t\tconst [, decimals, multiple] = value.split('.'); // disallow multiple dots\n\n\t\tif ((decimals && decimals.length > 2) || \n\t\ttypeof multiple === 'string' || \n\t\tvalue.startsWith('.') || \n\t\tvalue.startsWith('0') ||\n\t\tvalue.endsWith('+') ||\n\t\tvalue.endsWith('-')) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === 'from') {\n\t\t\tsetFromVal(value);\n\t\t\tsetToVal(String((+value * (rates[to] / rates[from])).toFixed(2)));\n\t\t} else {\n\t\t\tsetToVal(value);\n\t\t\tsetFromVal(String((+value * (rates[from] / rates[to])).toFixed(2)));\n\t\t}\n\t};\n\n\tconst handleClick = () => {\n\t\tconst fromValNum = !isReversed ? -Number(fromVal) : Number(fromVal);\n\t\tconst toValNum = !isReversed ? Number(toVal) : -Number(toVal);\n\n\t\tsetAccounts({ \n\t\t\t...accounts, \n\t\t\t[from]: (+accounts[from] + fromValNum).toFixed(2), \n\t\t\t[to]: (+accounts[to] + toValNum).toFixed(2)\n\t\t});\n\t};\n\n\tconst handleReverse = () => setReversed(!isReversed);\n\n\tif (hasError) {\n\t\treturn <ErrorPlaceholder />;\n\t}\n\n\treturn <VStack align='center' padding={8} spacing={6}>\n\t\t<Box>\n\t\t\t<Heading as='h1' size='lg' marginBottom={1}>Sell {from}</Heading>\n\t\t\t<Box data-testid='rate' color='gray.500'>\n\t\t\t\t{SYMBOLS[from]}1 = {SYMBOLS[to]}{(rates[to] / rates[from]).toFixed(6)}\n\t\t\t</Box>\n\t\t</Box>\n\n\t\t<Box position='relative'>\n\t\t\t<Block \n\t\t\t\ttype='from'\n\t\t\t\taccount={accounts[from]}\n\t\t\t\tsymbol={SYMBOLS[from]}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\thandleSelect={handleSelect}\n\t\t\t\tisReversed={isReversed}\n\t\t\t\taccountsKeys={accountsKeys}\n\t\t\t\tcurrency={from}\n\t\t\t\tinputVal={fromVal}\n\t\t\t\texceeds={fromExceedsBalance}\n\t\t\t/>\n\t\t\t\n\t\t\t<Block\n\t\t\t\ttype='to'\n\t\t\t\taccount={accounts[to]}\n\t\t\t\tsymbol={SYMBOLS[to]}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\thandleSelect={handleSelect}\n\t\t\t\tisReversed={isReversed}\n\t\t\t\taccountsKeys={accountsKeys}\n\t\t\t\tcurrency={to}\n\t\t\t\tinputVal={toVal}\n\t\t\t\texceeds={toExceedsBalance}\n\t\t\t/>\n\n\t\t\t<IconButton\n\t\t\t\ticon={<ArrowIcon\n\t\t\t\t\tcolor='cyan.400'\n\t\t\t\t/>}\n\t\t\t\taria-label='reverse'\n\t\t\t\tonClick={handleReverse}\n\t\t\t\tvariant='ghost'\n\t\t\t\tsize='lg'\n\t\t\t\ttransform={`rotate(${isReversed ? -45 : 145}deg)`}\n\t\t\t\tisRound\n\t\t\t\t_hover={{ bg: 'cyan.100' }}\n\t\t\t\t_active={{ bg: 'cyan.100' }}\n\t\t\t\t_focus={{ bg: 'cyan.100' }}\n\t\t\t\tposition='absolute'\n\t\t\t\ttop={'calc(50% - 24px)'}\n\t\t\t\tright='75px'\n\t\t\t/>\n\t\t</Box>\n\n\t\t<Button\n\t\t\taria-label='buy/sell'\n\t\t\tonClick={handleClick}\n\t\t\tdisabled={fromExceedsBalance || toExceedsBalance}\n\t\t\tcolorScheme='cyan'\n\t\t\tcolor='white'\n\t\t\tsize='lg'\n\t\t\twidth='200px'\n\t\t>\n\t\t\t{!isReversed ? `Sell ${from} for ${to}` : `Buy ${from} with ${to}`}\n\t\t</Button>\n\t</VStack>;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ChakraProvider>\n\t\t\t<App />\n\t\t</ChakraProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}